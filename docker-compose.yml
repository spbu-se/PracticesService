version: "3.9"
name: "practices-service"

services:
  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    build:
      context: .
      dockerfile: Gateway/Gateway.Api/Dockerfile
    ports:
      - "5000:8080"
    networks: 
       - proxybackend
  core.db:
    container_name: core.db
    image: postgres:14.5-alpine
    volumes:
      - ./Services/CoreService.Api/init-db/:/docker-entrypoint-initdb.d
      - ./Services/CoreService.Api/pg-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: 
       - proxybackend

  core.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ENVIRONMENT=Docker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    build:
      dockerfile: Services/CoreService.Api/Dockerfile
    volumes:
      - './:/core'
    ports:
      - "5001:8080"
    depends_on:
      core.db:
        condition: service_healthy
    networks: 
       - proxybackend

networks:
  proxybackend:
    name: proxybackend
    driver: bridge
